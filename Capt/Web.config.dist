<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
	<configSections>
		<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
		<section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true" />
		<section name="facebookSettings" type="Facebook.FacebookConfigurationSection" />
	</configSections>
	<connectionStrings configSource="db.config" />
	<appSettings>
		<add key="SiteName" value="Your Site name" />
		<!--<add key="GoogleAnalyticsId" value="UA-25779109-1" />-->

		<!-- Uncomment below to get errors emailed to you
		<add key="SmtpServer" value="localhost" />
		<add key="SmtpPort" value="25" />
		<add key="ErrorEmailsTo" value="your emaila ddress" />
		<add key="EmailsFrom" value="info@yoursite.com" />
		-->

		<!-- And these ones are optional
		<add key="SmtpLogin" value="" /> 
		<add key="SmtpPassword" value="" />
		<add key="SmtpSsl" value="True" />
		-->

		<add key="FacebookAppId" value="YOUR FACEBOOK APP ID" />
		<add key="FacebookAppSecret" value="YOUR FACEBOOK APP SECRET" />

		<add key="TwitterConsumerKey" value="YOUR TWITTER KEY" />
		<add key="TwitterConsumerSecret" value="YOUR TWITTER SECRET" />

		<!-- <add key="OpenIdRealm" value="http://*.captrato.com"/> -->
		<!-- <add key="ForceDomainName" value="www-qa.captrato.com" /> -->

		<!-- If you're going to use Google, Yahoo or Bing webmaster tools: 
		<add key="GoogleSiteVerification" value="" />
		<add key="YahooSiteVerification" value="" />
		<add key="BingSiteVerification" value="" />
		-->

		<add key="UseMicrosoftCDN" value="True" />
		<add key="webpages:Version" value="1.0.0.0" />
		<add key="ClientValidationEnabled" value="true" />
		<add key="UnobtrusiveJavaScriptEnabled" value="true" />
	</appSettings>
	<system.web>
		<customErrors mode="Off" />
		<sessionState mode="InProc" timeout="240"  />

		<httpRuntime requestValidationMode="2.0"/>
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
				<add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
				<add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
				<add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
				<add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			</assemblies>
		</compilation>
		
		<!--
			See where it says 'protection="None"' down there?  MOST LIKELY you want to remove that parameter, then visit
			http://aspnetresources.com/tools/machineKey, generate yourself a machine key
			and paste it into this file right below that "authentication" section.
		-->
		
		<authentication mode="Forms">
			<forms loginUrl="~/Account/LogOn" timeout="2880" protection="None" />
		</authentication>
		
		
		
		<roleManager enabled="true" defaultProvider="CaptRoleProvider">
			<providers>
				<clear />
				<add name="CaptRoleProvider" type="Capt.Providers.RoleProvider" />
			</providers>
		</roleManager>
		<pages>
			<namespaces>
				<add namespace="System.Web.Helpers" />
				<add namespace="System.Web.Mvc" />
				<add namespace="System.Web.Mvc.Ajax" />
				<add namespace="System.Web.Mvc.Html" />
				<add namespace="System.Web.Routing" />
				<add namespace="System.Web.WebPages" />
			</namespaces>
		</pages>
	</system.web>
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false" />
		<modules runAllManagedModulesForAllRequests="true" />
	</system.webServer>
	<runtime>
		<legacyHMACWarning enabled="0" />
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri>
	<system.net>
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>
	<dotNetOpenAuth>
		<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
		<!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
		<!-- You may also refer to README.Bin.html for instructions on enabling Intellisense for this section. -->
		<openid>
			<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
				</behaviors>
			</relyingParty>
		</openid>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
	</dotNetOpenAuth>
</configuration>